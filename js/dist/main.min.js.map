{"version":3,"sources":["main.js"],"names":["Carousel","element","_this","this","options","arguments","length","undefined","_classCallCheck","Object","assign","slidesToScroll","slidesVisible","loop","pagination","navigation","children","slice","call","isMobile","currentItem","moveCallbacks","root","createDivWithClass","container","map","child","item","appendChild","items","cb","onWindowResize","window","addEventListener","bind","e","key","ratio","createPagination","style","width","forEach","_this2","nextButton","prevButton","next","prev","onMove","index","classList","add","remove","_this3","_this4","buttons","_loop","i","button","gotoItem","Math","floor","activeButton","translateX","push","_this5","mobile","setStyle","className","div","document","createElement","setAttribute","onReady","querySelector","readyState"],"mappings":"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","file":"main.min.js","sourcesContent":["class Carousel {\n  /**\n   * This callback type is called `requestCallback` and is displayed as a global symbol.\n   *\n   * @callback moveCallback\n   * @param {number} index\n   */\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} options\n   * @param {Object} [options.slidesToScroll=1] Nombre d'éléments à faire défiler\n   * @param {Object} [options.slidesVisible=1] Nombre d'éléments visible dans un slide\n   * @param {boolean} [options.loop=false] Doit-t-on boucler en fin de carousel\n   * @param {boolean} [options.pagination=false]\n   * @param {boolean} [options.navigation=true]\n   */\n  constructor (element, options = {}) {\n    this.element = element\n    this.options = Object.assign({}, {\n      slidesToScroll: 1,\n      slidesVisible: 1,\n      loop: false,\n      pagination: false,\n      navigation: true\n    }, options)\n    let children = [].slice.call(element.children)\n    this.isMobile = false\n    this.currentItem = 0\n    this.moveCallbacks = []\n\n    // Modification du DOM\n    this.root = this.createDivWithClass('carousel')\n    this.container = this.createDivWithClass('carousel__container')\n    this.root.setAttribute('tabindex', '0')\n    this.root.appendChild(this.container)\n    this.element.appendChild(this.root)\n    this.items = children.map((child) => {\n      let item = this.createDivWithClass('carousel__item')\n      item.appendChild(child)\n      this.container.appendChild(item)\n      return item\n    })\n    this.setStyle()\n    if (this.options.navigation) {\n      this.createNavigation()\n    }\n    if (this.options.pagination) {\n      this.createPagination()\n    }\n\n    // Evenements\n    this.moveCallbacks.forEach(cb => cb(0))\n    this.onWindowResize()\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n    this.root.addEventListener('keyup', e => {\n      if (e.key === 'ArrowRight' || e.key === 'Right') {\n        this.next()\n      } else if (e.key === 'ArrowLeft' || e.key === 'Left') {\n        this.prev()\n      }\n    })\n  }\n\n  /**\n   * Applique les bonnes dimensions aux éléments du carousel\n   */\n  setStyle () {\n    let ratio = this.items.length / this.slidesVisible\n    this.container.style.width = (ratio * 100) + \"%\"\n    this.items.forEach(item => item.style.width = ((100 / this.slidesVisible) / ratio) + \"%\")\n  }\n\n  /**\n   * Crée les flêches de navigation dans le DOM\n   */\n  createNavigation () {\n    let nextButton = this.createDivWithClass('carousel__next')\n    let prevButton = this.createDivWithClass('carousel__prev')\n    this.root.appendChild(nextButton)\n    this.root.appendChild(prevButton)\n    nextButton.addEventListener('click', this.next.bind(this))\n    prevButton.addEventListener('click', this.prev.bind(this))\n    if (this.options.loop === true) {\n      return\n    }\n    this.onMove(index => {\n      if (index === 0) {\n        prevButton.classList.add('carousel__prev--hidden')\n      } else {\n        prevButton.classList.remove('carousel__prev--hidden')\n      }\n      if (this.items[this.currentItem + this.slidesVisible] === undefined) {\n        nextButton.classList.add('carousel__next--hidden')\n      } else {\n        nextButton.classList.remove('carousel__next--hidden')\n      }\n    })\n  }\n\n  /**\n   * Crée la pagination dans le DOM\n   */\n  createPagination () {\n    let pagination = this.createDivWithClass('carousel__pagination')\n    let buttons = []\n    this.root.appendChild(pagination)\n    for (let i = 0; i < this.items.length; i = i + this.options.slidesToScroll) {\n      let button = this.createDivWithClass('carousel__pagination__button')\n      button.addEventListener('click', () => this.gotoItem(i))\n      pagination.appendChild(button)\n      buttons.push(button)\n    }\n    this.onMove(index => {\n      let activeButton = buttons[Math.floor(index / this.options.slidesToScroll)]\n      if (activeButton) {\n        buttons.forEach(button => button.classList.remove('carousel__pagination__button--active'))\n        activeButton.classList.add('carousel__pagination__button--active')\n      }\n    })\n  }\n\n  /**\n   *\n   */\n  next () {\n    this.gotoItem(this.currentItem + this.slidesToScroll)\n  }\n\n  prev () {\n    this.gotoItem(this.currentItem - this.slidesToScroll)\n  }\n\n  /**\n   * Déplace le carousel vers l'élément ciblé\n   * @param {number} index\n   */\n  gotoItem (index) {\n    if (index < 0) {\n      if (this.options.loop) {\n        index = this.items.length - this.slidesVisible\n      } else {\n        return\n      }\n    } else if (index >= this.items.length || (this.items[this.currentItem + this.slidesVisible] === undefined && index > this.currentItem)) {\n      if (this.options.loop) {\n        index = 0\n      } else {\n        return\n      }\n    }\n    let translateX = index * -100 / this.items.length\n    this.container.style.transform = 'translate3d(' + translateX + '%, 0, 0)'\n    this.currentItem = index\n    this.moveCallbacks.forEach(cb => cb(index))\n  }\n\n  /**\n   * Rajoute un écouteur qui écoute le déplacement du carousel\n   * @param {moveCallback} cb\n   */\n  onMove (cb) {\n    this.moveCallbacks.push(cb)\n  }\n\n  /**\n   * Ecouteur pour le redimensionnement de la fenêtre\n   */\n  onWindowResize () {\n    let mobile = window.innerWidth < 800\n    if (mobile !== this.isMobile) {\n      this.isMobile = mobile\n      this.setStyle()\n      this.moveCallbacks.forEach(cb => cb(this.currentItem))\n    }\n  }\n\n  /**\n   * Helper pour créer une div avec une classe\n   * @param {string} className\n   * @returns {HTMLElement}\n   */\n  createDivWithClass (className) {\n    let div = document.createElement('div')\n    div.setAttribute('class', className)\n    return div\n  }\n\n  /**\n   * @returns {number}\n   */\n  get slidesToScroll () {\n    return this.isMobile ? 1 : this.options.slidesToScroll\n  }\n\n  /**\n   * @returns {number}\n   */\n  get slidesVisible () {\n    return this.isMobile ? 1 : this.options.slidesVisible\n  }\n\n}\n\nlet onReady = function () {\n\n  new Carousel(document.querySelector('#carousel2'), {\n    slidesVisible: 2,\n    slidesToScroll: 2,\n    pagination: true,\n    loop: true\n  })\n \n}\n \n\nif (document.readyState !== 'loading') {\n  onReady()\n}\ndocument.addEventListener('DOMContentLoaded', onReady)\n"]}